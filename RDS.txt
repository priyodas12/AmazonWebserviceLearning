RDS:

	1.Field,Touple(row),Attributes(columns)
	2.Schema->Design of database
	3.can not scale out Hrizontally.(adding more server)
	4.Vertical scale out possible but costly opertion.
	5.all are in SQL.

NOSQL:
	1.Non structured.
	2.low maintaninace
	3.Faster performace in read and write
	4.Horzontal scaling possible
	5.Best of OLAP
	
Type of NoSQL:
	1.Columnar Database(HBase,Cassendra)
	2.DOcument Database(MongoDB,COuchDB)
	3.Key-Value Database(Redis,DynamoDB)
	4.GraphBase Database(Neo4J,FloackDB)
	
RDS Database Engine:
	1.MS SQL server
	2.MySQL:64 TB
	3.Oracle
	4.Aws Aurora:High & Best Throughput. 
	5.PostgreSQL:Best among all with all reliable parameter.
	6.Maria DB.
	
Two Ways of Licencing:
	1.BYOL:Bring your own licence(can upload my licence)
	2.Licence from AWS.
	
RDS Limit:
	1.upto 40 database Instance can be created/account.
	2.if we take from AWS licence max 10 database instance can be created.
	3.max limit is 40 overall.
	
RDS Instance Storage:always EBS type of instance used always.

	1.Database engine will be created inside EC2.but EC2 database can be accessible.
	
		A.General Purpose: Modarate usage
			1.limit min-20GB
					max-16384GB
		B.Provisoned IOPS: OLTP workloads
			1.limit min-100GB
					max-16384GB
					
Templates of RDS instance:
	1.Production
	2.Dev/Test
	3.Free Tier
	
DB Instance Size:
	1.Standard Class:M series EC2 Inside:
		Max-96vCPU
		Min-384vCPU
		EBS-1400MBPS
	2.Memory Optimized:R and X series:
		Max-768GB RAM
			96vCPU GIB
			14000MBPS Throughput.
	3.Bustable:include T series:
		Max-32GB RAM
			8vCPU
			1500MBPS
	
Multiple Availability Zone Criteria:
	1.You can select Multi AZ option when you lunch RDS.(Multi AZ cannot be decided by user).
	2.RDS creates Stand by in different AZ and in same region with synchronous update.
	primary to stand by update will be synchronous.
	3.You cannot Read/Write data in stand by database.
	4.You cannot choose any AZ where stand by will be created,once RDS is Up you can only see in which AZ its created.
	5.after failover stand by will act as primary another standby  will be created,even though last one DB instance up then also it will act as stand-by.
	6.AWS recomended for provisioned IOPS for multiple AZ.
	
FailOver cases:
	1.primary database fails
	2.in case of AZ failure.
	3.Netwrok connectivity issue with primary.
	4.loss of primary DB EC2 instance fail.
	5.EBS failure
	6.Primary database instance chnaged.
	7.Patching the OS of the DB instance.
	8.Manual failover.(reboot)
	
Multi AZ RDS failover procedure:
	1.During Failover the CNAME of the RDS DB instances is updated to map with secondary IP address.
	2.RDS endpoint does not change by Selecting Multi AZ option,However the primary and stand by instances will have different IP address,as they are in different AZ.
	3.Its not recomended that you do not use IP address for RDS.
	4.Reboot with Failover option should be seleccted for manual failver.
	
Snapshots and Back ups:
	1.whenever failover occures AWS sends 
	SNS notification(chargable)
	2.You can use API call to findout the RDS eevnts occured in last 14 days.
	3.Even you can use CLI to see last 14 days logs
	4.In AWS console we can check only for one day.
	5.In case 
			OS patching
			Syatem updates
			DB Scaling
			these things happens on stand by then on primary.
			
	6.In Multi AZ snapshots and automated back ups are done on Stand by instance to avoid IO susspension.(5 mins delay)
	
RDS multi AZ Deployment:
	1.do first on stand by.
	2.convert stand by to primary.
	3.You can manually upgrade to DB instance
	RDS->DB instance->modify DB->Set DB Engine version on maintainance window.
	
RDS Backups:
	1.AWS RDS automated back ups
	2.User insitiated Manual back ups.
	3.either you can take ups for EC2 and DB instances or both.
	4.Back ups will be stored in different AZ.
	5.Stored in Amazon S3.
	6.For no multi AZ enabled primary will be freeze while taking back ups.
	7.Back ups should be ACTIVE while taking automatic back ups.
	8.Automated back ups process will not be charged but S3 storage charge will be taken.
	9.Automated back up will be deleted once RDS will be deleted.
	10.disable automatic back up->retention period to 0 days.
	11.default retention period:7 days(1-35 days range can be allowed)
	

RDS Backup process:
	1.In case of manual snapshot part in time recovery is not possible,for automated snapshot it will be taken 5 mins before.
	2.Manual Snapshot will be stored in S3.
	3.Manual snapshot will not be deleted automatically,once you delete RDS Instance from which snapshot taken.
	4.take a final snap shot before deleting your RDS DB instances.
	5.you can share Manual snapshot directly with other account.where as for automated backup snapshot must be copied and copy version will be shared.
	6.new instance cretaed will be as default and you have to customization.
	7.Instance end poit will be changed.
	
RDS Encryption:
	1.Encryption will be done time of creation.
	2.Once encrypted will not be undone,no runtime change.
	3.RDS supports Encryption at Rest for all DB Engines using KMS.
	
	
What all data actually encrypted:
	1.all its snapshots
	2.Backups of DB.
	3.Data on EBS
	4.Read Replica created from snapshot.
	
Billing:
	1.Storage GB/month
	2.Data transfer via internet.
	3.back ups storage.
	4.IOPS
	5.Multi AZ utilization
	
	
Lab:
	1.create RDS instance.
	2.create EC2 instance to conenct with RDS with same security group.
	3.sudo su -
	4.yum install -y mysql
	5.mysql -h <End point name> -u <username> -p <database name>
	
	
RDS FAQ:

1.For each regional deployment,use RDS MySQL with a master in region nad read replica in HQ Region.
2.when running myDB instances as a multi AZ deployment,we cannot use a standby for read/write manually.
3.we can initiate force failover for MultiAZ DB instance deployment.
4.during maaintanance window due to security patching DB instance can be offline.
5.you can test DB instance against a new version before upgrading.
6.When you run a DB Instance as a Multi-AZ deployment, the primary serves database writes and reads.
7.if I modify a DB instance parameter group associated with the instance,you should always reboot tosee the effect.
		
	
----------------------------------------------
RDS FAQ:


1.What storage engines does Amazon RDS for MySQL support?
The Point-In-Time-Restore and Snapshot Restore features of Amazon RDS for MySQL require a crash-recoverable storage engine and are supported for InnoDB storage engine only. While MySQL supports multiple storage engines with varying capabilities, not all of them are optimized for crash recovery and data durability. For example, MyISAM storage engine does not support reliable crash recovery and may result in lost or corrupt data when MySQL is restarted after a crash, preventing Point-In-Time-Restore or Snapshot restore from working as intended. However, if you still choose to use MyISAM with Amazon RDS, following these steps may be helpful in certain scenarios for DB snapshot restore functionality. Federated Storage Engine is currently not supported by Amazon RDS for MySQL.

2.Oracle SQL Developer-->A graphical Java tool distributed without cost by Oracle.	

3.Amazon RDS does not allow direct host access via Telnet, Secure Shell (SSH), or Windows Remote Desktop Connection
	
4.What is an isolated database environment running in the cloud (Amazon RDS) called DB Instance

5.What happens to the I/O operations while you take a database snapshot--I/O operations to the database are suspended for a few minutes while the backup is in progress.

6.Read Replicas require a transactional storage engine and are only supported for the InnoDB storage engine

7.When running my DB Instance as a Multi-AZ deployment, can I use the standby for read or write operations-NO

8.When should I choose Provisioned IOPS over Standard RDS storage-OLTP

9.What is the minimum charge for the data transferred between Amazon RDS and Amazon EC2 Instances in the same Av-Free
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
			  






















	